#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/wait.h>

/**
 * main - program that executes the command ls -l /tmp
 *        in 5 different child processes. Each child
 *        should be created by the same process (the father).
 *        Wait for a child to exit before creating a new child.
 *
 * Return: Always 0.
 */
int main()
{
  pid_t child_pid;
  int status;
  char *argv[] = {"/bin/ls", "-l", "/tmp", NULL};
  char *envp[] = {NULL};

  printf("Execute program\n");
  printf("====================================================================================================\n");

  child_pid = fork();

  if (child_pid == -1)
    {
      perror("Error:");
      exit(1);
    }
  if (child_pid == 0)
    {
      if (execve(argv[0], argv, envp) == -1)
	{
	  perror("Error:");
	}
    }
  else
    {
      wait(&status);
      printf("Done with execve.\n");
    }
  return (0);
}
